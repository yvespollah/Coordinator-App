# Generated by Django 5.2 on 2025-04-14 04:36

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Machine',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('cpu_model', models.CharField(max_length=255)),
                ('cpu_cores', models.IntegerField()),
                ('total_ram', models.IntegerField(help_text='RAM in MB')),
                ('available_storage', models.IntegerField(help_text='Storage in GB')),
                ('operating_system', models.CharField(max_length=255)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('current_status', models.CharField(choices=[('available', 'Available'), ('busy', 'Busy'), ('offline', 'Offline')], default='available', max_length=20)),
                ('gpu_available', models.BooleanField(default=False)),
                ('gpu_model', models.CharField(blank=True, max_length=255, null=True)),
                ('gpu_memory', models.IntegerField(blank=True, help_text='GPU memory in MB', null=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('communication_port', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=150, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=256)),
                ('registration_date', models.DateTimeField(auto_now_add=True)),
                ('last_login', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('suspended', 'Suspended')], default='active', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Availability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('available', 'Available'), ('busy', 'Busy'), ('disconnected', 'Disconnected'), ('idle', 'Idle')], default='available', max_length=20)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('running_tasks_count', models.PositiveIntegerField(default=0)),
                ('cpu_limit', models.DecimalField(decimal_places=2, help_text='CPU limit percentage, e.g., 75.00', max_digits=5)),
                ('ram_limit', models.PositiveIntegerField(help_text='RAM limit in MB')),
                ('available_time_slots', models.CharField(help_text='e.g., 08:00-12:00, 14:00-18:00', max_length=255)),
                ('machine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availabilities', to='api.machine')),
            ],
        ),
        migrations.CreateModel(
            name='Workflow',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('workflow_type', models.CharField(choices=[('DATA_PROCESSING', 'Traitement de données'), ('SCIENTIFIC_COMPUTING', 'Calcul scientifique'), ('RENDERING', 'Rendu graphique'), ('MACHINE_LEARNING', 'Apprentissage automatique')], default='DATA_PROCESSING', max_length=30)),
                ('status', models.CharField(choices=[('CREATED', 'Créé'), ('VALIDATED', 'Validé'), ('SUBMITTED', 'Soumis'), ('SPLITTING', 'En découpage'), ('ASSIGNING', 'En attribution'), ('PENDING', 'En attente'), ('RUNNING', 'En exécution'), ('PAUSED', 'En pause'), ('PARTIAL_FAILURE', 'Échec partiel'), ('REASSIGNING', 'Réattribution'), ('AGGREGATING', 'Agrégation'), ('COMPLETED', 'Terminé'), ('FAILED', 'Échoué')], default='CREATED', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('priority', models.IntegerField(default=1)),
                ('estimated_resources', models.JSONField(default=dict)),
                ('tags', models.JSONField(default=list)),
                ('metadata', models.JSONField(default=dict)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.manager')),
            ],
            options={
                'verbose_name': 'Workflow',
                'verbose_name_plural': 'Workflows',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('command', models.CharField(max_length=500)),
                ('parameters', models.JSONField(default=list)),
                ('dependencies', models.JSONField(default=list)),
                ('status', models.CharField(choices=[('PENDING', 'En attente'), ('ASSIGNED', 'Assigné'), ('RUNNING', 'En exécution'), ('COMPLETED', 'Terminé'), ('FAILED', 'Échoué')], default='PENDING', max_length=20)),
                ('is_subtask', models.BooleanField(default=False)),
                ('progress', models.FloatField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('required_resources', models.JSONField(default=dict)),
                ('assigned_to', models.CharField(blank=True, max_length=255, null=True)),
                ('attempts', models.IntegerField(default=0)),
                ('results', models.JSONField(blank=True, default=dict, null=True)),
                ('error_details', models.JSONField(blank=True, default=dict, null=True)),
                ('docker_image', models.CharField(blank=True, max_length=255, null=True)),
                ('parent_task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subtasks', to='api.task')),
                ('workflow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='api.workflow')),
            ],
            options={
                'verbose_name': 'Tâche',
                'verbose_name_plural': 'Tâches',
                'ordering': ['-is_subtask', 'created_at'],
            },
        ),
    ]
